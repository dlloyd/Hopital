<?php

namespace HOEquipmentBundle\Repository;

/**
 * EquipmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EquipmentRepository extends \Doctrine\ORM\EntityRepository
{

	public function findAllFromService($serviceId){
		$qb = $this->createQueryBuilder('e');
		$qb->select('e');
		$qb->innerJoin('e.service', 's', 'WITH', 's.id = :service');
		$qb->setParameter('service',$serviceId);

		return $qb->getQuery()->getResult();
	}

	public function findEquipmentsByCategory($categId){
		$qb = $this->createQueryBuilder('e');
		$qb->select('e');
		$qb->innerJoin('e.category', 'c', 'WITH', 'c.id = :categ');
		$qb->setParameter('categ',$categId);

		return $qb->getQuery()->getResult();
	}

	public function findEquipmentsByBrand($brandId){
		$qb = $this->createQueryBuilder('e');
		$qb->select('e');
		$qb->innerJoin('e.brand', 'b', 'WITH', 'b.id = :brand');
		$qb->setParameter('brand',$brandId);

		return $qb->getQuery()->getResult();
	}

	public function findEquipments(){
		$qb = $this->createQueryBuilder('e');
		$qb->select('e');
		$qb->where('e.toolBox IS NULL');

		return $qb->getQuery()->getResult();

	}

	public function findEquipmentsCount(){
		$qb = $this->createQueryBuilder('e');
		$qb->select('COUNT(e)');
		$qb->where('e.toolBox IS NULL');

		return $qb->getQuery()->getSingleScalarResult();

	}

	public function findMaterialInterventions(){
		$qb = $this->createQueryBuilder('e');
		$qb->select('e');
		$qb->where('e.toolBox IS NOT NULL');

		return $qb->getQuery()->getResult();
	}

	public function findEquipmentsToControl(){
		$qb = $this->createQueryBuilder('e');
		$qb->select('e');
		$qb->where('e.isBroken = true');

		return $qb->getQuery()->getResult();

	}
}
